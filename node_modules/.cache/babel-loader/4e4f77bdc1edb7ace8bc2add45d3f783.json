{"ast":null,"code":"var _jsxFileName = \"/home/alan/Documentos/Cursos/pharma-context/src/provider/data.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { loadUsers } from '../services/load.users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/React.createContext({});\nexport const AuthProvider = props => {\n  _s();\n\n  const [user, setUser] = useState([]);\n\n  const loadUse = async () => {\n    const datas = await loadUsers(50);\n    setUser(datas);\n  };\n\n  useEffect(() => {\n    loadUse();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthProvider, \"g26Pb/ecDi+x6k07CsgfguRqPQQ=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/alan/Documentos/Cursos/pharma-context/src/provider/data.js"],"names":["React","useEffect","useState","loadUsers","AuthContext","createContext","AuthProvider","props","user","setUser","loadUse","datas","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,wBAA1B;;AACA,OAAO,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAN,CAAoB,EAApB,CAApB;AAEP,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AACnC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMQ,OAAO,GAAG,YAAY;AACxB,UAAMC,KAAK,GAAG,MAAMR,SAAS,CAAC,EAAD,CAA7B;AACAM,IAAAA,OAAO,CAACE,KAAD,CAAP;AACH,GAHD;;AAKAV,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,OAAO;AACV,GAFQ,EAEP,EAFO,CAAT;AAIA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACF,MAAAA;AAAD,KAA7B;AAAA,cACKD,KAAK,CAACK;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAjBM;;GAAMN,Y;;KAAAA,Y","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { loadUsers } from '../services/load.users';\nexport const AuthContext = React.createContext({});\n\nexport const AuthProvider = (props) => {\n    const [user, setUser] = useState([]);\n\n    const loadUse = async () => {\n        const datas = await loadUsers(50);\n        setUser(datas);\n    }\n    \n    useEffect(() => {\n        loadUse();\n    },[])\n \n    return (\n        <AuthContext.Provider value={{user}}>\n            {props.children}\n        </AuthContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}