{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { AuthContext } from '../provider/data';\nexport const useSearch = () => {\n  _s();\n\n  const {\n    users\n  } = /*#__PURE__*/React.createContext(AuthContext);\n  const [search, setSearch] = useState('');\n\n  const handleChange = e => {\n    const {\n      value\n    } = e.target;\n    setSearch(value);\n  };\n\n  const filteredUsers = search ? users.filter(user => {\n    return user.name.first.toLowerCase().includes(search.toLowerCase());\n  }) : users;\n  return {\n    search,\n    handleChange,\n    filteredUsers\n  };\n};\n\n_s(useSearch, \"xMSft3/sbCidYXUzqinUsZIh+qY=\");","map":{"version":3,"sources":["/home/alan/Documentos/Cursos/pharma-context/src/hooks/useSearch.js"],"names":["React","useState","AuthContext","useSearch","users","createContext","search","setSearch","handleChange","e","value","target","filteredUsers","filter","user","name","first","toLowerCase","includes"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAAEC,IAAAA;AAAF,mBAAYJ,KAAK,CAACK,aAAN,CAAoBH,WAApB,CAAlB;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMO,YAAY,GAAIC,CAAD,IAAO;AACxB,UAAM;AAAEC,MAAAA;AAAF,QAAYD,CAAC,CAACE,MAApB;AACAJ,IAAAA,SAAS,CAACG,KAAD,CAAT;AACH,GAHD;;AAKA,QAAME,aAAa,GAAGN,MAAM,GAC1BF,KAAK,CAACS,MAAN,CAAcC,IAAD,IAAU;AACvB,WAAOA,IAAI,CAACC,IAAL,CAAUC,KAAV,CAAgBC,WAAhB,GAA8BC,QAA9B,CAAuCZ,MAAM,CAACW,WAAP,EAAvC,CAAP;AACD,GAFC,CAD0B,GAI1Bb,KAJF;AAMA,SAAO;AAAEE,IAAAA,MAAF;AAAUE,IAAAA,YAAV;AAAwBI,IAAAA;AAAxB,GAAP;AACH,CAhBM;;GAAMT,S","sourcesContent":["import React, { useState } from 'react'\nimport { AuthContext } from '../provider/data';\n\nexport const useSearch = () => {\n    const { users } = React.createContext(AuthContext);\n    const [search, setSearch] = useState('');\n\n    const handleChange = (e) => {\n        const { value } = e.target;\n        setSearch(value);\n    };\n\n    const filteredUsers = search\n    ? users.filter((user) => {\n      return user.name.first.toLowerCase().includes(search.toLowerCase())\n    })\n    : users;\n\n    return { search, handleChange, filteredUsers };\n}"]},"metadata":{},"sourceType":"module"}